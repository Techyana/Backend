import { MigrationInterface, QueryRunner } from "typeorm";

export class UpdatePartForClaimsAndCollections1758470924172 implements MigrationInterface {
    name = 'UpdatePartForClaimsAndCollections1758470924172'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "part_transactions" DROP CONSTRAINT "FK_part_transactions_user"`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP CONSTRAINT "FK_notifications_user"`);
        await queryRunner.query(`ALTER TABLE "activity_logs" DROP CONSTRAINT "FK_activity_logs_user"`);
        await queryRunner.query(`DROP INDEX "public"."ix_parts_serial"`);
        await queryRunner.query(`DROP INDEX "public"."ix_devices_serial"`);
        await queryRunner.query(`ALTER TABLE "notifications" RENAME COLUMN "userId" TO "user_id"`);
        await queryRunner.query(`ALTER TABLE "parts" DROP COLUMN "description"`);
        await queryRunner.query(`ALTER TABLE "parts" DROP COLUMN "serial_number"`);
        await queryRunner.query(`ALTER TABLE "parts" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "parts" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "part_transactions" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "part_transactions" DROP COLUMN "part_id"`);
        await queryRunner.query(`ALTER TABLE "part_transactions" DROP COLUMN "user_id"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP COLUMN "type"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP COLUMN "brand"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP COLUMN "serial_number"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "toners" DROP COLUMN "quantity"`);
        await queryRunner.query(`ALTER TABLE "toners" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "toners" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "parts" ADD "part_number" character varying(50) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "parts" ADD "for_device_models" text array NOT NULL DEFAULT ARRAY[]::text[]`);
        await queryRunner.query(`ALTER TABLE "parts" ADD "quantity" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "parts" ADD "claimed_by_id" uuid`);
        await queryRunner.query(`ALTER TABLE "parts" ADD "claimed_at" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "parts" ADD "collected" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "parts" ADD "collected_at" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "parts" ADD "created_at_timestamp" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "parts" ADD "updated_at_timestamp" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "part_transactions" ADD "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "part_transactions" ADD "partId" uuid`);
        await queryRunner.query(`ALTER TABLE "part_transactions" ADD "userId" uuid`);
        await queryRunner.query(`ALTER TABLE "devices" ADD "serialNumber" character varying(100) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "devices" ADD CONSTRAINT "UQ_190fa9fd55b3263df273e808cd3" UNIQUE ("serialNumber")`);
        await queryRunner.query(`ALTER TABLE "devices" ADD "customerName" character varying`);
        await queryRunner.query(`ALTER TABLE "devices" ADD "condition" character varying`);
        await queryRunner.query(`ALTER TABLE "devices" ADD "comments" character varying`);
        await queryRunner.query(`ALTER TABLE "devices" ADD "removalReason" character varying`);
        await queryRunner.query(`ALTER TABLE "devices" ADD "created_at_timestamp" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "devices" ADD "updated_at_timestamp" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "toners" ADD "edpCode" character varying(100) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "toners" ADD "yield" integer`);
        await queryRunner.query(`ALTER TABLE "toners" ADD "stock" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "toners" ADD "for_device_models" text array NOT NULL DEFAULT ARRAY[]::text[]`);
        await queryRunner.query(`ALTER TABLE "toners" ADD "created_at_timestamp" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "toners" ADD "updated_at_timestamp" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "parts" DROP CONSTRAINT "parts_pkey"`);
        await queryRunner.query(`ALTER TABLE "parts" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "parts" ADD "id" uuid NOT NULL DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TABLE "parts" ADD CONSTRAINT "PK_daa5595bb8933f49ac00c9ebc79" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "parts" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "parts" ADD "name" character varying(100) NOT NULL`);
        await queryRunner.query(`ALTER TYPE "public"."parts_status_enum" RENAME TO "parts_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."parts_status_enum" AS ENUM('AVAILABLE', 'PENDING_COLLECTION', 'COLLECTED')`);
        await queryRunner.query(`ALTER TABLE "parts" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "parts" ALTER COLUMN "status" TYPE "public"."parts_status_enum" USING "status"::"text"::"public"."parts_status_enum"`);
        await queryRunner.query(`ALTER TABLE "parts" ALTER COLUMN "status" SET DEFAULT 'AVAILABLE'`);
        await queryRunner.query(`DROP TYPE "public"."parts_status_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."part_transactions_type_enum" RENAME TO "part_transactions_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."part_transactions_type_enum" AS ENUM('ADD', 'CLAIM', 'COLLECT')`);
        await queryRunner.query(`ALTER TABLE "part_transactions" ALTER COLUMN "type" TYPE "public"."part_transactions_type_enum" USING "type"::"text"::"public"."part_transactions_type_enum"`);
        await queryRunner.query(`DROP TYPE "public"."part_transactions_type_enum_old"`);
        await queryRunner.query(`ALTER TABLE "part_transactions" ALTER COLUMN "quantityDelta" DROP DEFAULT`);
        await queryRunner.query(`ALTER TYPE "public"."notifications_type_enum" RENAME TO "notifications_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."notifications_type_enum" AS ENUM('GENERAL', 'PART_ADDED', 'PART_CLAIMED', 'PART_COLLECTED', 'PART_REMOVED')`);
        await queryRunner.query(`ALTER TABLE "notifications" ALTER COLUMN "type" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "notifications" ALTER COLUMN "type" TYPE "public"."notifications_type_enum" USING "type"::"text"::"public"."notifications_type_enum"`);
        await queryRunner.query(`ALTER TABLE "notifications" ALTER COLUMN "type" SET DEFAULT 'GENERAL'`);
        await queryRunner.query(`DROP TYPE "public"."notifications_type_enum_old"`);
        await queryRunner.query(`ALTER TABLE "activity_logs" DROP COLUMN "timestamp"`);
        await queryRunner.query(`ALTER TABLE "activity_logs" ADD "timestamp" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "activity_logs" ALTER COLUMN "user_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "devices" DROP CONSTRAINT "devices_pkey"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "devices" ADD "id" uuid NOT NULL DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TABLE "devices" ADD CONSTRAINT "PK_b1514758245c12daf43486dd1f0" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "devices" DROP COLUMN "model"`);
        await queryRunner.query(`ALTER TABLE "devices" ADD "model" character varying(100) NOT NULL`);
        await queryRunner.query(`ALTER TYPE "public"."devices_status_enum" RENAME TO "devices_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."devices_status_enum" AS ENUM('approved_for_disposal', 'removed')`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "status" TYPE "public"."devices_status_enum" USING "status"::"text"::"public"."devices_status_enum"`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "status" SET DEFAULT 'approved_for_disposal'`);
        await queryRunner.query(`DROP TYPE "public"."devices_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "toners" DROP CONSTRAINT "toners_pkey"`);
        await queryRunner.query(`ALTER TABLE "toners" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "toners" ADD "id" uuid NOT NULL DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TABLE "toners" ADD CONSTRAINT "PK_937c96253575ae61c57d8232e9b" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "toners" DROP COLUMN "model"`);
        await queryRunner.query(`ALTER TABLE "toners" ADD "model" character varying(100) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "parts" ADD CONSTRAINT "FK_26d8896b03233fc4eb2744ac7c5" FOREIGN KEY ("claimed_by_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "part_transactions" ADD CONSTRAINT "FK_9998744808c1d5f2ddd26a09f7a" FOREIGN KEY ("partId") REFERENCES "parts"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "part_transactions" ADD CONSTRAINT "FK_8bdcdb0293978aed6e3ed827e9a" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD CONSTRAINT "FK_9a8a82462cab47c73d25f49261f" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "activity_logs" ADD CONSTRAINT "FK_d54f841fa5478e4734590d44036" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stripped_parts" ADD CONSTRAINT "FK_47a62ead80f81e188f6d6b26078" FOREIGN KEY ("deviceId") REFERENCES "devices"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stripped_parts" ADD CONSTRAINT "FK_11289e9b61c4a07588b197937fb" FOREIGN KEY ("partId") REFERENCES "parts"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "stripped_parts" DROP CONSTRAINT "FK_11289e9b61c4a07588b197937fb"`);
        await queryRunner.query(`ALTER TABLE "stripped_parts" DROP CONSTRAINT "FK_47a62ead80f81e188f6d6b26078"`);
        await queryRunner.query(`ALTER TABLE "activity_logs" DROP CONSTRAINT "FK_d54f841fa5478e4734590d44036"`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP CONSTRAINT "FK_9a8a82462cab47c73d25f49261f"`);
        await queryRunner.query(`ALTER TABLE "part_transactions" DROP CONSTRAINT "FK_8bdcdb0293978aed6e3ed827e9a"`);
        await queryRunner.query(`ALTER TABLE "part_transactions" DROP CONSTRAINT "FK_9998744808c1d5f2ddd26a09f7a"`);
        await queryRunner.query(`ALTER TABLE "parts" DROP CONSTRAINT "FK_26d8896b03233fc4eb2744ac7c5"`);
        await queryRunner.query(`ALTER TABLE "toners" DROP COLUMN "model"`);
        await queryRunner.query(`ALTER TABLE "toners" ADD "model" character varying(64) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "toners" DROP CONSTRAINT "PK_937c96253575ae61c57d8232e9b"`);
        await queryRunner.query(`ALTER TABLE "toners" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "toners" ADD "id" SERIAL NOT NULL`);
        await queryRunner.query(`ALTER TABLE "toners" ADD CONSTRAINT "toners_pkey" PRIMARY KEY ("id")`);
        await queryRunner.query(`CREATE TYPE "public"."devices_status_enum_old" AS ENUM('active', 'inactive', 'maintenance', 'retired')`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "status" TYPE "public"."devices_status_enum_old" USING "status"::"text"::"public"."devices_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "status" SET DEFAULT 'active'`);
        await queryRunner.query(`DROP TYPE "public"."devices_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."devices_status_enum_old" RENAME TO "devices_status_enum"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP COLUMN "model"`);
        await queryRunner.query(`ALTER TABLE "devices" ADD "model" character varying(64)`);
        await queryRunner.query(`ALTER TABLE "devices" DROP CONSTRAINT "PK_b1514758245c12daf43486dd1f0"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "devices" ADD "id" SERIAL NOT NULL`);
        await queryRunner.query(`ALTER TABLE "devices" ADD CONSTRAINT "devices_pkey" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "activity_logs" ALTER COLUMN "user_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "activity_logs" DROP COLUMN "timestamp"`);
        await queryRunner.query(`ALTER TABLE "activity_logs" ADD "timestamp" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`CREATE TYPE "public"."notifications_type_enum_old" AS ENUM('part_arrival', 'part_available', 'general')`);
        await queryRunner.query(`ALTER TABLE "notifications" ALTER COLUMN "type" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "notifications" ALTER COLUMN "type" TYPE "public"."notifications_type_enum_old" USING "type"::"text"::"public"."notifications_type_enum_old"`);
        await queryRunner.query(`ALTER TABLE "notifications" ALTER COLUMN "type" SET DEFAULT 'general'`);
        await queryRunner.query(`DROP TYPE "public"."notifications_type_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."notifications_type_enum_old" RENAME TO "notifications_type_enum"`);
        await queryRunner.query(`ALTER TABLE "part_transactions" ALTER COLUMN "quantityDelta" SET DEFAULT '1'`);
        await queryRunner.query(`CREATE TYPE "public"."part_transactions_type_enum_old" AS ENUM('claim', 'request', 'return', 'collect')`);
        await queryRunner.query(`ALTER TABLE "part_transactions" ALTER COLUMN "type" TYPE "public"."part_transactions_type_enum_old" USING "type"::"text"::"public"."part_transactions_type_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."part_transactions_type_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."part_transactions_type_enum_old" RENAME TO "part_transactions_type_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."parts_status_enum_old" AS ENUM('in_stock', 'used', 'defective', 'reserved')`);
        await queryRunner.query(`ALTER TABLE "parts" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "parts" ALTER COLUMN "status" TYPE "public"."parts_status_enum_old" USING "status"::"text"::"public"."parts_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "parts" ALTER COLUMN "status" SET DEFAULT 'in_stock'`);
        await queryRunner.query(`DROP TYPE "public"."parts_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."parts_status_enum_old" RENAME TO "parts_status_enum"`);
        await queryRunner.query(`ALTER TABLE "parts" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "parts" ADD "name" character varying(128) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "parts" DROP CONSTRAINT "PK_daa5595bb8933f49ac00c9ebc79"`);
        await queryRunner.query(`ALTER TABLE "parts" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "parts" ADD "id" SERIAL NOT NULL`);
        await queryRunner.query(`ALTER TABLE "parts" ADD CONSTRAINT "parts_pkey" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "toners" DROP COLUMN "updated_at_timestamp"`);
        await queryRunner.query(`ALTER TABLE "toners" DROP COLUMN "created_at_timestamp"`);
        await queryRunner.query(`ALTER TABLE "toners" DROP COLUMN "for_device_models"`);
        await queryRunner.query(`ALTER TABLE "toners" DROP COLUMN "stock"`);
        await queryRunner.query(`ALTER TABLE "toners" DROP COLUMN "yield"`);
        await queryRunner.query(`ALTER TABLE "toners" DROP COLUMN "edpCode"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP COLUMN "updated_at_timestamp"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP COLUMN "created_at_timestamp"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP COLUMN "removalReason"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP COLUMN "comments"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP COLUMN "condition"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP COLUMN "customerName"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP CONSTRAINT "UQ_190fa9fd55b3263df273e808cd3"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP COLUMN "serialNumber"`);
        await queryRunner.query(`ALTER TABLE "part_transactions" DROP COLUMN "userId"`);
        await queryRunner.query(`ALTER TABLE "part_transactions" DROP COLUMN "partId"`);
        await queryRunner.query(`ALTER TABLE "part_transactions" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "parts" DROP COLUMN "updated_at_timestamp"`);
        await queryRunner.query(`ALTER TABLE "parts" DROP COLUMN "created_at_timestamp"`);
        await queryRunner.query(`ALTER TABLE "parts" DROP COLUMN "collected_at"`);
        await queryRunner.query(`ALTER TABLE "parts" DROP COLUMN "collected"`);
        await queryRunner.query(`ALTER TABLE "parts" DROP COLUMN "claimed_at"`);
        await queryRunner.query(`ALTER TABLE "parts" DROP COLUMN "claimed_by_id"`);
        await queryRunner.query(`ALTER TABLE "parts" DROP COLUMN "quantity"`);
        await queryRunner.query(`ALTER TABLE "parts" DROP COLUMN "for_device_models"`);
        await queryRunner.query(`ALTER TABLE "parts" DROP COLUMN "part_number"`);
        await queryRunner.query(`ALTER TABLE "toners" ADD "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "toners" ADD "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "toners" ADD "quantity" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "devices" ADD "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "devices" ADD "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "devices" ADD "serial_number" character varying(64)`);
        await queryRunner.query(`ALTER TABLE "devices" ADD "brand" character varying(64)`);
        await queryRunner.query(`ALTER TABLE "devices" ADD "type" character varying(64) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "part_transactions" ADD "user_id" uuid`);
        await queryRunner.query(`ALTER TABLE "part_transactions" ADD "part_id" uuid`);
        await queryRunner.query(`ALTER TABLE "part_transactions" ADD "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "parts" ADD "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "parts" ADD "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "parts" ADD "serial_number" character varying(64)`);
        await queryRunner.query(`ALTER TABLE "parts" ADD "description" text`);
        await queryRunner.query(`ALTER TABLE "notifications" RENAME COLUMN "user_id" TO "userId"`);
        await queryRunner.query(`CREATE INDEX "ix_devices_serial" ON "devices" ("serial_number") `);
        await queryRunner.query(`CREATE INDEX "ix_parts_serial" ON "parts" ("serial_number") `);
        await queryRunner.query(`ALTER TABLE "activity_logs" ADD CONSTRAINT "FK_activity_logs_user" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD CONSTRAINT "FK_notifications_user" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "part_transactions" ADD CONSTRAINT "FK_part_transactions_user" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

}
